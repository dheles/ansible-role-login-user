---
- name: create project subdirectory for ssh keys
  file:
    path: "{{ project_pki_subdirectory }}"
    state: directory
    mode: "u+rw,g-rwx,o-rwx"
  delegate_to: 127.0.0.1

- name: create ssh key for login user
  shell: >
    ssh-keygen
    -t "{{ key_type }}"
    -b "{{ key_size }}"
    -f "{{ login_user_key }}"
    -C "{{ login_user }} @ {{ project }} {{ environ }} key"
    -N "{{ login_user_passphrase }}"
  args:
    chdir: "{{ project_pki_subdirectory }}"
    creates: "{{ login_user_key }}"
  delegate_to: 127.0.0.1
  run_once: true
  when: "{{ create_login_user_key }}"

- name: gather facts
  setup:
  register: facts

# verbosity level of 3 requires the play to be run with -vvv to output the debug data 
- name: report facts
  debug:
    var: facts
    verbosity: 3


# NOTE: need this before working with sudoers file, if SELinux is enforcing
- name: install SELinux management libraries for RedHat family
  yum: name=libselinux-python state=present
  when: ansible_os_family == 'RedHat'

- name: install SELinux management libraries for Debian family
  apt: name=python-selinux state=present
  when: ansible_os_family == 'Debian'
  become: true

- name: add login user group
  group:
    name: "{{ login_group }}"
    gid:  "{{ login_group_gid | default(omit) }}"
    state: present
  become: true

- name: add login user
  user:
    name: "{{ login_user }}"
    shell: "/bin/bash"
    uid:    "{{ login_user_uid  | default(omit) }}"
    group:  "{{ login_group  }}"
  become: true

# give login user sudo
- block:
  - name: create temporary sudoers file for login user
    copy:
      dest: "/tmp/sudoers_{{ login_user }}.edit"
      content: "{{ login_user }} ALL=(ALL) NOPASSWD: ALL"

  - name: validate and implement edits
    copy:
      src: "/tmp/sudoers_{{ login_user }}.edit"
      dest: "/etc/sudoers.d/{{ login_user }}"
      validate: 'visudo -cf %s'
      remote_src: true
      mode: "u=r,g=r,o-rwx" #0440

  - name: cleanup temp file
    file:
      path: "/tmp/sudoers_{{ login_user }}.edit"
      state: absent

  become: true
# ...end block

- name: deploy ssh key for login user
  authorized_key:
    user: "{{ login_user }}"
    # NOTE: presumes project_pki_subdirectory is "~/[directory name]". may not work otherwise
    key: "{{ lookup('file',  project_pki_subdirectory | replace('~', lookup('env','HOME')) + '/' + login_user_key + '.pub') }}"
  become: true

- name: add entries to ssh_config
  blockinfile:
    dest: "{{ local_pki_directory }}/config"
    marker: "# {mark} {{ inventory_hostname }} {{ environ }}"
    block: "{{ lookup('template', 'ssh_config.j2') }}"
  delegate_to: 127.0.0.1
